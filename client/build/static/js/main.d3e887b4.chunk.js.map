{"version":3,"sources":["helpers/setAuthToken.js","redux/actions/auth.js","redux/actions/types.js","redux/actions/todo.js","redux/actions/search.js","redux/actions/pagination.js","redux/actions/tag.js","redux/hooks.js","pages/Homepage.js","atoms/Spinner.js","pages/layout/NavLinks.js","atoms/Icon.js","atoms/Button.js","pages/layout/Navbar.js","atoms/Input.js","pages/auth/Register.js","pages/auth/Login.js","pages/dashboard/Todo.js","atoms/FlexTable.js","helpers/formatDate.js","atoms/Modal.js","atoms/Pagination.js","pages/dashboard/TodoList.js","pages/dashboard/Search.js","pages/dashboard/PageSize.js","pages/dashboard/Dashboard.js","pages/NotFound.js","pages/routing/PrivateRoute.js","pages/routing/Routes.js","redux/reducers/auth.js","redux/reducers/todo.js","redux/reducers/tag.js","redux/reducers/search.js","redux/reducers/pagination.js","redux/reducers/index.js","redux/store.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","loadUser","dispatch","a","localStorage","get","res","type","payload","data","register","name","email","password","config","body","JSON","stringify","post","toast","success","errors","response","forEach","error","msg","login","logout","getTodos","statusText","status","getTodo","id","addTodo","formData","deleteTodo","delete","updateTodo","put","toggleCompleteTodo","_id","setLocationChanged","setSearch","term","filtered","filter","todo","tags","toLowerCase","includes","setPage","page","setPageSize","size","setPageItems","setPageReset","bool","getTags","useAuth","useDispatch","useSelector","state","auth","isAuthenticated","loading","user","shallowEqual","useCallback","registerUser","loginUser","logoutUser","useTodo","todos","boundGetTodos","boundAddTodo","boundDeleteTodo","boundUpdateTodo","useSearch","searchTerm","search","isActive","setSearchTerm","usePagination","activePage","pagination","pageSize","pageOfItems","pageReset","Landing","to","className","Spinner","animation","variant","role","NavLinks","style","top","left","Navbar","Collapse","Nav","NavDropdown","title","Item","as","Link","onClick","Icon","icon","fixedWidth","color","border","inverse","icons","cursor","e","target","parentNode","hasAttribute","getAttribute","mytype","Button","text","disabled","undefined","Header","collapseOnSelect","expand","Container","Brand","alt","src","Toggle","aria-controls","Input","required","placeholder","autoComplete","onChange","onBlur","onKeyDown","plaintext","readOnly","pClassName","value","label","controlId","children","inputTextLeft","inputTextRight","inputTextRightOnClick","minLength","Form","Group","Label","InputGroup","Prepend","Text","Control","Register","useState","password2","setFormData","onSubmit","preventDefault","Login","Todo","description","setModal","tag","tagId","useTags","useEffect","isOpen","Card","Body","Row","Title","Col","xs","sm","md","options","selectedIndex","FlexTable","titleData","iconClick","tableId","map","item","k","key","fieldName","i","Fragment","completed","date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","checkZero","length","formatDate","Date","Modal","modalClose","dialogClassName","centered","show","onHide","Paginations","items","initialPage","onChangePage","paginationClass","setActivePage","isSearchActive","paginationReset","setPaginationReset","pager","setPager","getPager","totalPages","slice","startIndex","endIndex","totalItems","startPage","endPage","currentPage","Math","ceil","min","pages","Array","keys","Pagination","First","Prev","active","Next","Last","TodoList","modal","handleShow","handleClick","Search","PageSize","Number","Dashboard","NotFound","PrivateRoute","Component","component","rest","render","props","Routes","exact","path","initialState","getItem","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","newestOnTop","autoClose","Homepage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d3e887b4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from \"./types\";\r\nimport setAuthToken from \"./../../helpers/setAuthToken\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/users\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    toast.success(\"You have registered successfully\");\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => toast.error(error.msg));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n\r\n    toast.success(\"You have logined successfully\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => toast.error(error.msg));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\n\r\nexport const GET_TODOS = 'GET_TODOS';\r\nexport const GET_TODOS_SUCCESS = 'GET_TODOS_SUCCESS';\r\nexport const GET_TODOS_ERROR = 'GET_TODOS_ERROR';\r\n\r\nexport const GET_TODO = 'GET_TODO';\r\nexport const GET_TODO_SUCCESS = 'GET_TODO_SUCCESS';\r\nexport const GET_TODO_ERROR = 'GET_TODO_ERROR';\r\n\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\r\nexport const ADD_TODO_ERROR = 'ADD_TODO_ERROR';\r\n\r\nexport const TOGGLE_COMPLETE_TODO = 'TOGGLE_COMPLETE_TODO';\r\nexport const TOGGLE_COMPLETE_SUCCESS = 'TOGGLE_COMPLETE_SUCCESS';\r\nexport const TOGGLE_COMPLETE_ERROR = 'TOGGLE_COMPLETE_ERROR';\r\n\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const UPDATE_TODO_SUCCESS = 'UPDATE_TODO_SUCCESS';\r\nexport const UPDATE_TODO_ERROR = 'UPDATE_TODO_ERROR';\r\n\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const DELETE_TODO_SUCCESS = 'DELETE_TODO_SUCCESS';\r\nexport const DELETE_TODO_ERROR = 'DELETE_TODO_ERROR';\r\n\r\nexport const GET_TAGS = 'GET_TAGS';\r\nexport const GET_TAGS_SUCCESS = 'GET_TAGS_SUCCESS';\r\nexport const GET_TAGS_ERROR = 'GET_TAGS_ERROR';\r\n\r\nexport const SET_SEARCH = 'SET_SEARCH';\r\nexport const SET_SEARCH_TERM = 'SET_SEARCH_TERM';\r\nexport const LOCATION_CHANGED = 'LOCATION_CHANGED';\r\n\r\nexport const SET_PAGINATION_PAGE = 'SET_PAGINATION_PAGE';\r\nexport const SET_PAGINATION_ITEMS = 'SET_PAGINATION_ITEMS';\r\nexport const SET_PAGINATION_SIZE = 'SET_PAGINATION_SIZE';\r\nexport const SET_PAGINATION_RESET = 'SET_PAGINATION_RESET';\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  GET_TODOS,\r\n  GET_TODOS_SUCCESS,\r\n  GET_TODOS_ERROR,\r\n  GET_TODO,\r\n  GET_TODO_SUCCESS,\r\n  GET_TODO_ERROR,\r\n  ADD_TODO,\r\n  ADD_TODO_SUCCESS,\r\n  ADD_TODO_ERROR,\r\n  DELETE_TODO,\r\n  DELETE_TODO_SUCCESS,\r\n  DELETE_TODO_ERROR,\r\n  UPDATE_TODO,\r\n  UPDATE_TODO_SUCCESS,\r\n  UPDATE_TODO_ERROR,\r\n  TOGGLE_COMPLETE_TODO,\r\n  TOGGLE_COMPLETE_SUCCESS,\r\n  TOGGLE_COMPLETE_ERROR\r\n} from './types';\r\nimport { toast } from 'react-toastify';\r\nimport { loadUser } from './auth';\r\n\r\n// Get All Todos\r\nexport const getTodos = () => async (dispatch) => {\r\n  try {\r\n    dispatch(loadUser());\r\n    dispatch({\r\n      type: GET_TODOS\r\n    });\r\n    const res = await axios.get('/api/todos');\r\n\r\n    dispatch({\r\n      type: GET_TODOS_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_TODOS_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get Todo\r\nexport const getTodo = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_TODO\r\n    });\r\n    const res = await axios.get(`/api/todos/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_TODO_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_TODO_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add todo\r\nexport const addTodo = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  try {\r\n    dispatch({\r\n      type: ADD_TODO\r\n    });\r\n    const res = await axios.post('/api/todos', formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_TODO_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    toast.success('POST added successfully');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => toast.error(error.msg));\r\n    }\r\n\r\n    dispatch({\r\n      type: ADD_TODO_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete todo\r\nexport const deleteTodo = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: DELETE_TODO\r\n    });\r\n    await axios.delete(`/api/todos/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_TODO_SUCCESS,\r\n      payload: id\r\n    });\r\n\r\n    toast.success('POST deleted successfully');\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DELETE_TODO_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Update POST\r\nexport const updateTodo = (formData, id) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    dispatch({\r\n      type: UPDATE_TODO\r\n    });\r\n    const res = await axios.put(`/api/todos/${id}`, formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_TODO_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    toast.success('POST updated successfully');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => toast.error(error.msg));\r\n    }\r\n\r\n    dispatch({\r\n      type: UPDATE_TODO_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Complete or Uncomplete Todo\r\nexport const toggleCompleteTodo = (id) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    dispatch({\r\n      type: TOGGLE_COMPLETE_TODO\r\n    });\r\n    const res = await axios.put(`/api/todos/complete/${id}`, config);\r\n    dispatch({\r\n      type: TOGGLE_COMPLETE_SUCCESS,\r\n      payload: { status: res.data, _id: id }\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => toast.error(error.msg));\r\n    }\r\n\r\n    dispatch({\r\n      type: TOGGLE_COMPLETE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n","import { SET_SEARCH_TERM, LOCATION_CHANGED, SET_SEARCH } from './types';\r\n\r\nexport const setSearchTerm = (term) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_SEARCH_TERM,\r\n    payload: { term }\r\n  });\r\n};\r\n\r\nexport const setLocationChanged = () => async (dispatch) => {\r\n  dispatch({\r\n    type: LOCATION_CHANGED\r\n  });\r\n};\r\n\r\nexport const setSearch = (term, data) => async (dispatch) => {\r\n  const filtered = data.filter((todo) => {\r\n    return todo.tags[0].name.toLowerCase().includes(term.toLowerCase());\r\n  });\r\n\r\n  dispatch({\r\n    type: SET_SEARCH,\r\n    payload: { filtered }\r\n  });\r\n};\r\n","import { SET_PAGINATION_PAGE, SET_PAGINATION_SIZE, SET_PAGINATION_ITEMS, SET_PAGINATION_RESET } from './types';\r\n\r\nexport const setPage = (page) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGINATION_PAGE,\r\n    payload: page\r\n  });\r\n};\r\n\r\nexport const setPageSize = (size) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGINATION_SIZE,\r\n    payload: size\r\n  });\r\n};\r\n\r\nexport const setPageItems = (size) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGINATION_ITEMS,\r\n    payload: size\r\n  });\r\n};\r\n\r\nexport const setPageReset = (bool) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGINATION_RESET,\r\n    payload: bool\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\nGET_TAGS,\r\nGET_TAGS_SUCCESS,\r\nGET_TAGS_ERROR\r\n} from \"./types\";\r\n\r\n// Get All Todos\r\nexport const getTags = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_TAGS,\r\n    });\r\n    const res = await axios.get(\"/api/tags\");\r\n\r\n    dispatch({\r\n      type: GET_TAGS_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_TAGS_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, shallowEqual, useSelector } from 'react-redux';\r\nimport { loadUser, register, login, logout } from './actions/auth';\r\nimport {\r\n  getTodos,\r\n  addTodo,\r\n  deleteTodo,\r\n  updateTodo,\r\n  getTodo,\r\n  toggleCompleteTodo\r\n} from './actions/todo';\r\nimport { setSearch, setSearchTerm, setLocationChanged } from './actions/search';\r\nimport { setPage, setPageItems, setPageSize, setPageReset } from './actions/pagination';\r\n\r\nimport { getTags } from './actions/tag';\r\n\r\nexport function useAuth() {\r\n  const dispatch = useDispatch();\r\n  const { token, isAuthenticated, loading, user } = useSelector(\r\n    (state) => ({\r\n      token: state.auth.token,\r\n      isAuthenticated: state.auth.isAuthenticated,\r\n      loading: state.auth.loading,\r\n      user: state.auth.user\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const boundLoadUser = useCallback(\r\n    (...args) => {\r\n      return dispatch(loadUser(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundRegisterUser = useCallback(\r\n    (...args) => {\r\n      return dispatch(register(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundLoginUser = useCallback(\r\n    (...args) => {\r\n      return dispatch(login(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const boundLogoutUser = useCallback(\r\n    (...args) => {\r\n      return dispatch(logout(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    token,\r\n    isAuthenticated,\r\n    loading,\r\n    user,\r\n    loadUser: boundLoadUser,\r\n    registerUser: boundRegisterUser,\r\n    loginUser: boundLoginUser,\r\n    logoutUser: boundLogoutUser\r\n  };\r\n}\r\n\r\nexport function useTodo() {\r\n  const dispatch = useDispatch();\r\n  const { todos, todo, loading, error } = useSelector(\r\n    (state) => ({\r\n      todos: state.todo.todos,\r\n      todo: state.todo.todo,\r\n      loading: state.todo.loading,\r\n      error: state.todo.error\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const boundGetTodos = useCallback(\r\n    (...args) => {\r\n      return dispatch(getTodos(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundAddTodo = useCallback(\r\n    (...args) => {\r\n      return dispatch(addTodo(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundDeleteTodo = useCallback(\r\n    (...args) => {\r\n      return dispatch(deleteTodo(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundUpdateTodo = useCallback(\r\n    (...args) => {\r\n      return dispatch(updateTodo(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundGetTodo = useCallback(\r\n    (...args) => {\r\n      return dispatch(getTodo(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundToggleCompleteTodo = useCallback(\r\n    (...args) => {\r\n      return dispatch(toggleCompleteTodo(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    todos,\r\n    todo,\r\n    loading,\r\n    error,\r\n    getTodos: boundGetTodos,\r\n    getTodo: boundGetTodo,\r\n    addTodo: boundAddTodo,\r\n    deleteTodo: boundDeleteTodo,\r\n    updateTodo: boundUpdateTodo,\r\n    toggleCompleteTodo: boundToggleCompleteTodo\r\n  };\r\n}\r\n\r\nexport function useTags() {\r\n  const dispatch = useDispatch();\r\n  const { tags, loading, error } = useSelector(\r\n    (state) => ({\r\n      tags: state.tag.tags,\r\n      loading: state.tag.loading,\r\n      error: state.tag.error\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const boundGetTags = useCallback(\r\n    (...args) => {\r\n      return dispatch(getTags(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    tags,\r\n    loading,\r\n    error,\r\n    getTags: boundGetTags\r\n  };\r\n}\r\n\r\n//+++++++++++++++++++++++++ SEARCH TODOS +++++++++++++++++++++++++++++++++++++\r\n\r\nexport function useSearch() {\r\n  const dispatch = useDispatch();\r\n  const { isActive, searchTerm, filtered } = useSelector(\r\n    (state) => ({\r\n      searchTerm: state.search.searchTerm,\r\n      isActive: state.search.isActive,\r\n      filtered: state.search.filtered\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const boundSetSearchTerm = useCallback(\r\n    (term, type) => {\r\n      return dispatch(setSearchTerm(term, type));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundSetSearch = useCallback(\r\n    (...args) => {\r\n      return dispatch(setSearch(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const boundSetLocationChanged = useCallback(\r\n    (...args) => {\r\n      return dispatch(setLocationChanged(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    filtered,\r\n    setSearchTerm: boundSetSearchTerm,\r\n    setSearch: boundSetSearch,\r\n    setLocationChanged: boundSetLocationChanged,\r\n    isActive,\r\n    searchTerm\r\n  };\r\n}\r\n\r\n//+++++++++++++++++++++++++ PAGINATION +++++++++++++++++++++++++++++++++++++\r\nexport function usePagination() {\r\n  const dispatch = useDispatch();\r\n  const { activePage, pageSize, pageOfItems, pageReset } = useSelector(\r\n    (state) => ({\r\n      activePage: state.pagination.activePage,\r\n      pageSize: state.pagination.pageSize,\r\n      pageOfItems: state.pagination.pageOfItems,\r\n      pageReset: state.pagination.pageReset\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const boundSetPageSize = useCallback(\r\n    (...args) => {\r\n      return dispatch(setPageSize(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const boundSetPage = useCallback(\r\n    (...args) => {\r\n      return dispatch(setPage(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const boundSetPageItems = useCallback(\r\n    (...args) => {\r\n      return dispatch(setPageItems(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const boundSetPageReset = useCallback(\r\n    (...args) => {\r\n      return dispatch(setPageReset(...args));\r\n    },\r\n    [dispatch]\r\n  );\r\n  return {\r\n    activePage,\r\n    pageSize,\r\n    pageOfItems,\r\n    pageReset,\r\n    setPageSize: boundSetPageSize,\r\n    setPage: boundSetPage,\r\n    setPageItems: boundSetPageItems,\r\n    setPageReset: boundSetPageReset\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../redux/hooks\";\r\n\r\nconst Landing = () => {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large m-2\">Lets POST</h1>\r\n          <div className=\"buttons m-4\">\r\n            <Link to=\"/register\" className=\"btn btn-primary m-2\">\r\n              Sign Up\r\n            </Link>\r\n            <Link to=\"/login\" className=\"btn btn-light m-2\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport { Spinner as SpinnerB } from 'react-bootstrap';\r\n\r\nconst Spinner = ({ animation, variant, size, role, className }) => {\r\n  return <SpinnerB animation={animation} variant={variant} size={size} role={role} className={className} />;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { useAuth } from './../../redux/hooks';\r\nimport Spinner from './../../atoms/Spinner';\r\n\r\nconst NavLinks = () => {\r\n  const { isAuthenticated, logoutUser, user, loading } = useAuth();\r\n\r\n  return loading ? (\r\n    <div className=\"position-absolute\" style={{ top: '50%', left: '50%' }}>\r\n      <Spinner animation=\"grow\" />\r\n    </div>\r\n  ) : (\r\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n      {isAuthenticated && (\r\n        <>\r\n          <Nav className=\"ml-12\"></Nav>\r\n          <Nav>\r\n            <NavDropdown title={'Signed in: ' + user?.name} id=\"navbar-nav-dropdown\">\r\n              <NavDropdown.Item as={Link} to=\"/\" onClick={() => {\r\n\r\n                logoutUser()\r\n                }}>Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </>\r\n      )}\r\n      {!isAuthenticated && (\r\n        <Nav>\r\n          <Nav.Link className='ml-5' as={Link} to=\"/login\">\r\n            Login\r\n          </Nav.Link>\r\n        </Nav>\r\n      )}\r\n    </Navbar.Collapse>\r\n  );\r\n};\r\nexport default NavLinks;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as icons from '@fortawesome/free-solid-svg-icons';\r\nexport default function Icon({\r\n  icon,\r\n  onClick,\r\n  name,\r\n  id,\r\n  fixedWidth,\r\n  size,\r\n  color,\r\n  border,\r\n  inverse\r\n}) {\r\n  const handleOnClick = (e, icon) => {\r\n    onClick(\r\n      e,\r\n      e.target.parentNode.hasAttribute('mytype')\r\n        ? e.target.parentNode.getAttribute('id')\r\n        : e.target.getAttribute('id'),\r\n      name\r\n    );\r\n  };\r\n  return (\r\n    <FontAwesomeIcon\r\n      icon={icons[icon]}\r\n      style={{ cursor: 'pointer' }}\r\n      onClick={handleOnClick}\r\n      id={id}\r\n      mytype=\"my-type\"\r\n      name={name}\r\n      size={size}\r\n      border={border}\r\n      color={color}\r\n      fixedWidth={fixedWidth}\r\n      inverse={inverse}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button as ButtonB } from 'react-bootstrap';\r\nimport Icon from './Icon';\r\n\r\nexport default function Button({\r\n  id,\r\n  text,\r\n  disabled = false,\r\n  onClick = undefined,\r\n  type = 'button',\r\n  className,\r\n  variant,\r\n  color,\r\n  icon,\r\n  size\r\n}) {\r\n  return (\r\n    <ButtonB\r\n      id={id}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      type={type}\r\n      variant={variant}\r\n      size={size}\r\n      color={color}\r\n      className={className}\r\n    >\r\n      {icon && <Icon icon={icon} />}\r\n      <span>{text}</span> \r\n    </ButtonB>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport NavLinks from './NavLinks';\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from './../../atoms/Button';\r\nimport './Navbar.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Navbar className=\"todo-app-navbar\" collapseOnSelect expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          <center>\r\n          <img\r\n            className=\"tv2z-logo\"\r\n            alt=\"TV2Z\"\r\n            src='./logo.png'\r\n          />\r\n          </center>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n        <NavLinks />\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\n\r\nexport default function Input({\r\n  id,\r\n  name,\r\n  type = 'text',\r\n  required = false,\r\n  placeholder,\r\n  autoComplete,\r\n  onChange = undefined,\r\n  onClick = undefined,\r\n  onBlur = undefined,\r\n  onKeyDown = undefined,\r\n  plaintext = false,\r\n  readOnly = false,\r\n  className,\r\n  pClassName,\r\n  value,\r\n  disabled = false,\r\n  as,\r\n  label,\r\n  size,\r\n  controlId,\r\n  children,\r\n  error,\r\n  inputTextLeft,\r\n  inputTextRight,\r\n  inputTextRightOnClick,\r\n  minLength\r\n}) {\r\n  return (\r\n    <Form.Group className={pClassName} controlId={controlId}>\r\n      <Form.Label>\r\n        {label}\r\n        {error}\r\n      </Form.Label>\r\n      <InputGroup>\r\n        <InputGroup.Prepend>\r\n          {inputTextLeft && (\r\n            <InputGroup.Text className=\"py-0\">{inputTextLeft}</InputGroup.Text>\r\n          )}\r\n        </InputGroup.Prepend>\r\n        <Form.Control\r\n          as={as}\r\n          id={id}\r\n          name={name}\r\n          type={type}\r\n          required={required}\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n          onClick={onClick}\r\n          onBlur={onBlur}\r\n          onKeyDown={onKeyDown}\r\n          className={className}\r\n          disabled={disabled}\r\n          size={size}\r\n          value={value}\r\n          readOnly={readOnly}\r\n          plaintext={plaintext}\r\n          autoComplete={autoComplete}\r\n          minLength={minLength}\r\n        >\r\n          {children}\r\n        </Form.Control>\r\n        <InputGroup.Prepend onClick={inputTextRightOnClick}>\r\n          {inputTextRight && (\r\n            <InputGroup.Text className=\"py-0\">{inputTextRight}</InputGroup.Text>\r\n          )}\r\n        </InputGroup.Prepend>\r\n      </InputGroup>\r\n    </Form.Group>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuth } from './../../redux/hooks';\r\n\r\nimport Input from './../../atoms/Input';\r\nimport Button from './../../atoms/Button';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst Register = () => {\r\n  const { registerUser, isAuthenticated } = useAuth();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      toast.error('Passwords do not match');\r\n    } else {\r\n      registerUser({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Create Your Account\r\n      </p>\r\n      <Form>\r\n        <Input\r\n          label=\"Name\"\r\n          id=\"register-name\"\r\n          type=\"text\"\r\n          value={name}\r\n          name=\"name\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Name\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <Input\r\n          label=\"Email\"\r\n          id=\"register-email\"\r\n          type=\"email\"\r\n          value={email}\r\n          name=\"email\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Email Address\"\r\n          required\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <Input\r\n          label=\"Password\"\r\n          id=\"register-password\"\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"password\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Create a password\"\r\n          autoComplete=\"off\"\r\n          minLength=\"6\"\r\n        />\r\n        <Input\r\n          label=\"Password\"\r\n          id=\"register-password-2\"\r\n          type=\"password\"\r\n          value={password2}\r\n          name=\"password2\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Confirm Password\"\r\n          autoComplete=\"off\"\r\n          minLength=\"6\"\r\n        />\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          text=\"Register\"\r\n          onClick={(e) => onSubmit(e)}\r\n          color=\"white\"\r\n          type=\"submit\"\r\n          className={`float-right`}\r\n          id=\"user-register-button\"\r\n        />\r\n      </Form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useAuth } from './../../redux/hooks';\r\nimport Input from './../../atoms/Input';\r\nimport Button from './../../atoms/Button';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst Login = () => {\r\n  const { loginUser, isAuthenticated } = useAuth();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    loginUser(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Sign Into Your Account\r\n      </p>\r\n\r\n      <Form>\r\n        <Input\r\n          label=\"Email\"\r\n          id=\"login-email\"\r\n          type=\"email\"\r\n          value={email}\r\n          name=\"email\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Email Address\"\r\n          required\r\n          autoComplete=\"off\"\r\n        />\r\n        <Input\r\n          label=\"Password\"\r\n          id=\"login-password\"\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"password\"\r\n          onChange={(e) => onChange(e)}\r\n          placeholder=\"Enter your password\"\r\n          autoComplete=\"off\"\r\n          minLength=\"6\"\r\n        />\r\n        <Button\r\n          variant=\"info\"\r\n          text=\"Login\"\r\n          onClick={(e) => onSubmit(e)}\r\n          color=\"white\"\r\n          type=\"submit\"\r\n          className={` float-right`}\r\n          id=\"user-login-button\"\r\n        />\r\n      </Form>\r\n      <p className=\"my-1\">\r\n       <b> DEMO account</b> email: demo@armannakhwa.cf <br></br> password: 12345678\r\n      </p>\r\n      <br></br><br></br>\r\n      <p className=\"my-1\">\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Col, Row, Card } from 'react-bootstrap';\r\nimport { useTodo, useTags } from './../../redux/hooks';\r\n\r\nimport Input from './../../atoms/Input';\r\nimport Button from './../../atoms/Button';\r\n\r\nconst Todo = ({ description, setModal }) => {\r\n  const { addTodo, todo, loading, updateTodo } = useTodo();\r\n  const [formData, setFormData] = useState({\r\n    tag: !loading && description === 'Update' ? todo.tags[0].name : 'POST',\r\n    tagId: !loading && description === 'Update' ? todo.tags[0]._id : '655b5abe61963e5f9766c256',\r\n    text: !loading && description === 'Update' ? todo.text : ''\r\n  });\r\n\r\n  const { getTags, tags } = useTags();\r\n\r\n  useEffect(() => {\r\n    getTags();\r\n  }, [getTags]);\r\n\r\n  const { text, tag, tagId } = formData;\r\n\r\n  const onChange = (e) => {\r\n    return setFormData(\r\n      e.target.name === 'tag' && tagId !== '655b5abe61963e5f9766c2526'\r\n        ? {\r\n            ...formData,\r\n            tagId: e.target.options[e.target.options.selectedIndex].getAttribute(\r\n              'option-id'\r\n            ),\r\n            tag: e.target.value\r\n          }\r\n        : { ...formData, [e.target.name]: e.target.value }\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    description === 'Add' && addTodo({ text, tagId, tag });\r\n    description === 'Update' && updateTodo({ text, tagId, tag }, todo._id);\r\n    setModal({ isOpen: false });\r\n  };\r\n  return loading ? (\r\n    <h2>Loading</h2>\r\n  ) : (\r\n    <Card className=\"todo-form p-4\">\r\n      <Card.Body>\r\n        <Row className=\"d-flex justify-content-between align-items-center mb-5\">\r\n          <Card.Title>{description} POSTS</Card.Title>\r\n\r\n          <Row className=\"d-flex justify-content-between flex-nowrap\"></Row>\r\n        </Row>\r\n        <Form>\r\n          <Form.Row>\r\n            <Col xs={12} sm={12} md={8}>\r\n              <Input\r\n                label=\"POST\"\r\n                id=\"todo-text\"\r\n                type=\"text\"\r\n                value={text}\r\n                name=\"text\"\r\n                onChange={(e) => onChange(e)}\r\n                autoComplete=\"off\"\r\n              />\r\n            </Col>\r\n            <Col xs={12} sm={12} md={4}>\r\n              {/* <Input\r\n                as=\"select\"\r\n                label=\"POST Tag\"\r\n                id={`todo-tag-${description}`}\r\n                type=\"text\"\r\n                value={tag}\r\n                onChange={(e) => onChange(e)}\r\n                name=\"tag\"\r\n                autoComplete=\"off\"\r\n                pClassName={tagId === '655b5abe61963e5f9766c256' ? 'd-none' : ''}\r\n              > \r\n                {tags.map((tag) => {\r\n                  return (\r\n                    <option\r\n                      disabled={tag._id === '655b5abe61963e5f9766c256'}\r\n                      option-id={tag._id}\r\n                      key={tag._id}\r\n                    >\r\n                      {tag.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Input>\r\n              */}\r\n              {/* <Input\r\n                inputTextRight=\"X\"\r\n                inputTextRightOnClick={() => {\r\n                  setFormData({ ...formData, tag: '', tagId: '' });\r\n                }}\r\n                label=\"Create a Tag\"\r\n                id={`todo-tag-other-${description}`}\r\n                type=\"text\"\r\n                pClassName={tagId !== '655b5abe61963e5f9766c256' ? 'd-none' : 'd-block'}\r\n                value={tagId === '655b5abe61963e5f9766c256' ? tag : ''}\r\n                onChange={\r\n                  tagId === '655b5abe61963e5f9766c256' ? (e) => onChange(e) : () => {}\r\n                }\r\n                name=\"tag\"\r\n                autoComplete=\"off\"\r\n              /> */}\r\n            </Col>\r\n          </Form.Row>\r\n\r\n          <Button\r\n            variant=\"secondary\"\r\n            text={description === 'Update' ? 'Update POST' : 'Add POST'}\r\n            onClick={(e) => onSubmit(e)}\r\n            color=\"white\"\r\n            type=\"submit\"\r\n            className=\"float-right\"\r\n            id={`todo-update-add-button-${description}`}\r\n          />\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport './FlexTable.css';\r\nimport Icon from './Icon';\r\nimport { formatDate } from './../helpers/formatDate';\r\n\r\nconst FlexTable = ({ titleData = [], data = [], iconClick, tableId }) => {\r\n  return (\r\n    <div id={`${tableId}`} className={`flexTable flexTable--5cols flexTable--collapse `}>\r\n      <div className=\"flexTable-row flexTable-row--head\">\r\n        <div className=\"flexTable-row flexTable-row--head\">\r\n          {titleData.map((item, k) => (\r\n            <div\r\n              key={k}\r\n              className={`flexTable-cell ${item.fieldName}-cell column-heading`}\r\n            >\r\n              {' '}\r\n              {item.title}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {data.map((item, i) => (\r\n        <React.Fragment key={'row' + i}>\r\n          <div className={`flexTable-row ${item.completed ? 'flexTable-row-completed' : ''}`}>\r\n            {titleData.map((title, k) => {\r\n              if (title.fieldName === 'date') {\r\n                return (\r\n                  <div\r\n                    className={`flexTable-cell ${title.fieldName}-cell`}\r\n                    key={'column' + k}\r\n                  >\r\n                    <div className=\"flexTable-cell--heading\">{title.title}</div>\r\n                    <div className={`flexTable-cell--content ${title.fieldName}-content`}>\r\n                      {title.fieldName === 'date' && formatDate(new Date(`${item.date}`))}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n              if (title.fieldName === 'tags') {\r\n                return (\r\n                  <div\r\n                    className={`flexTable-cell ${title.fieldName}-cell`}\r\n                    key={'column' + k}\r\n                  >\r\n                    <div className=\"flexTable-cell--heading\">{title.title}</div>\r\n                    {item.tags.map((tag) => (\r\n                      <div key={tag._id} className={`flexTable-cell--content ${title.fieldName}-content`}>{tag.name}</div>\r\n                    ))}\r\n                  </div>\r\n                );\r\n              }\r\n              if (item[title.fieldName]) {\r\n                return (\r\n                  <div\r\n                    className={`flexTable-cell ${title.fieldName}-cell`}\r\n                    key={'column' + k}\r\n                  >\r\n                    <div className=\"flexTable-cell--heading\">{title.title}</div>\r\n                    <div className={`flexTable-cell--content ${title.fieldName}-content`}>\r\n                      {item[title.fieldName]}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <div\r\n                  className={`flexTable-cell ${title.fieldName}-cell`}\r\n                  key={`icon${k + k}`}\r\n                  name={item.id}\r\n                >\r\n                  <div className=\"flexTable-cell--heading\">{title.title}</div>\r\n                  <div className={`flexTable-cell--content ${title.fieldName}-content`}>\r\n                    {title.icons?.map((icon, i) => (\r\n                      <Icon\r\n                        key={i}\r\n                        name={item._id}\r\n                        icon={'fa' + icon}\r\n                        onClick={iconClick}\r\n                        id={icon}\r\n                        size={'1x'}\r\n                        fixedWidth\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlexTable;\r\n","export const formatDate = (date, type) => {\r\n  let day = date.getDate() + '';\r\n  let month = date.getMonth() + 1 + '';\r\n  let year = date.getFullYear() + '';\r\n  let hour = date.getHours() + '';\r\n  let minutes = date.getMinutes() + '';\r\n\r\n  const checkZero = (data) => {\r\n    if (data.length === 1) {\r\n      data = '0' + data;\r\n    }\r\n    return data;\r\n  };\r\n  day = checkZero(day);\r\n  month = checkZero(month);\r\n  year = checkZero(year);\r\n  hour = checkZero(hour);\r\n  minutes = checkZero(minutes);\r\n\r\n  if (type === 'onlyDate') {\r\n    return day + '/' + month + '/' + year + ' ';\r\n  }\r\n\r\n  return day + '/' + month + '/' + year + ' ' + hour + ':' + minutes;\r\n};\r\n","import React from 'react';\r\nimport { Modal as ModalB } from 'react-bootstrap';\r\nimport './Modal.css'\r\n\r\nconst Modal = ({ children, isOpen, modalClose, dialogClassName, centered }) => {\r\n  return (\r\n    <>\r\n      <ModalB dialogClassName={dialogClassName} centered={centered} show={isOpen} onHide={modalClose}>\r\n        {children}\r\n      </ModalB>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport './Pagination.css';\r\n\r\nconst Paginations = ({\r\n  items,\r\n  pageSize,\r\n  initialPage = 1,\r\n  onChangePage,\r\n  paginationClass,\r\n  setActivePage,\r\n  isSearchActive,\r\n  activePage,\r\n  paginationReset,\r\n  setPaginationReset\r\n}) => {\r\n  const [pager, setPager] = useState({});\r\n\r\n  const setPage = useCallback(\r\n    (page, size) => {\r\n      // get new pager object for specified page\r\n      const pager = getPager(items.length, page, size);\r\n\r\n      if ((page < 1 || page > pager.totalPages) && !isSearchActive) {\r\n        return;\r\n      }\r\n      // get new page of items from items array\r\n      const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n      setActivePage(page);\r\n      // update state\r\n      setPager(pager);\r\n\r\n      // call change page function in parent component\r\n      onChangePage(pageOfItems);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [items]\r\n  );\r\n\r\n  useEffect(() => {\r\n    // set page if items array isn't empty\r\n    if ((items && items.length) || isSearchActive) {\r\n      if (paginationReset) {\r\n        setPage(initialPage, pageSize);\r\n      } else {\r\n        setPage(activePage, pageSize);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [initialPage, isSearchActive, items, pageSize, setPage]);\r\n\r\n  const getPager = (totalItems, currentPage = 1, pageSize) => {\r\n    // calculate total pages\r\n    const totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n    let startPage, endPage;\r\n    if (totalPages <= 6) {\r\n      // less than 10 total pages so show all\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      // more than 10 total pages so calculate start and end pages\r\n      if (currentPage <= 4) {\r\n        startPage = 1;\r\n        endPage = 7;\r\n      } else if (currentPage + 3 >= totalPages) {\r\n        startPage = totalPages - 6;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - 3;\r\n        endPage = currentPage + 3;\r\n      }\r\n    }\r\n    // start and end item indexes\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n    // create an array of pages\r\n\r\n    const pages = [...Array(endPage + 1 - startPage).keys()].map((i) => {\r\n      if (i === 0) {\r\n        return { page: 1, value: true };\r\n      }\r\n      if (currentPage >= 5 && i === 1) {\r\n        return { page: startPage + i, value: false };\r\n      }\r\n      if (currentPage + 3 >= totalPages && i >= 4) {\r\n        return { page: startPage + i, value: true };\r\n      }\r\n      if (i < 5) {\r\n        return { page: startPage + i, value: true };\r\n      }\r\n      if (i < 6) {\r\n        return { page: startPage + i, value: false };\r\n      }\r\n      if (i === 6) {\r\n        return { page: totalPages, value: true };\r\n      }\r\n    });\r\n\r\n    // return object with all pager properties required by the view\r\n    return {\r\n      totalItems: totalItems,\r\n      currentPage: currentPage,\r\n      pageSize: pageSize,\r\n      totalPages: totalPages,\r\n      startPage: startPage,\r\n      endPage: endPage,\r\n      startIndex: startIndex,\r\n      endIndex: endIndex,\r\n      pages: pages\r\n    };\r\n  };\r\n  if (!pager.pages || pager.pages.length <= 1) {\r\n    // don't display pager if there is only 1 page\r\n    return null;\r\n  }\r\n  return (\r\n    <Pagination className={`${paginationClass}`}>\r\n      <Pagination.First onClick={() => setPage(1, pager.pageSize)} />\r\n      <Pagination.Prev\r\n        onClick={() => {\r\n          setPaginationReset(true);\r\n          setPage(pager.currentPage - 1, pager.pageSize);\r\n        }}\r\n      />\r\n\r\n      {pager.pages.map((page, i) => (\r\n        <Pagination.Item\r\n          active={page.value && pager.currentPage === page.page}\r\n          key={'page' + i}\r\n          onClick={() => {\r\n            setPaginationReset(true);\r\n            page.value && setPage(page.page, pager.pageSize);\r\n          }}\r\n          className={!page.value ? 'disabled' : ''}\r\n        >\r\n          {page.value ? page.page : '...'}\r\n        </Pagination.Item>\r\n      ))}\r\n\r\n      <Pagination.Next\r\n        onClick={() => {\r\n          setPaginationReset(true);\r\n          setPage(pager.currentPage + 1, pager.pageSize);\r\n        }}\r\n      />\r\n      <Pagination.Last onClick={() => setPage(pager.totalPages, pager.pageSize)} />\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default Paginations;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useTodo, useSearch, usePagination } from './../../redux/hooks';\r\n\r\nimport Todo from './Todo';\r\n\r\nimport FlexTable from './../../atoms/FlexTable';\r\nimport Modal from './../../atoms/Modal';\r\nimport Button from './../../atoms/Button';\r\nimport Pagination from './../../atoms/Pagination';\r\nimport './TodoList.css';\r\n\r\nconst title = [\r\n  {\r\n    title: 'Tag',\r\n    fieldName: 'tags',\r\n    className: 'col-xs-2'\r\n  },\r\n  {\r\n    title: 'POST',\r\n    fieldName: 'text',\r\n    className: 'col-xs-2'\r\n  },\r\n  {\r\n    title: 'Created At',\r\n    fieldName: 'date',\r\n    className: 'col-xs-3'\r\n  },\r\n\r\n  {\r\n    title: '',\r\n    fieldName: 'icon',\r\n\r\n    icons: ['Edit', 'Check', 'TrashAlt'],\r\n    className: 'col-xs-3'\r\n  }\r\n];\r\n\r\nconst TodoList = () => {\r\n  const { todos, getTodos, deleteTodo, getTodo, toggleCompleteTodo } = useTodo();\r\n\r\n  const { filtered, isActive, searchTerm, setSearch } = useSearch();\r\n  const {\r\n    activePage,\r\n    pageSize,\r\n    pageOfItems,\r\n    setPageItems,\r\n    setPage,\r\n    pageReset,\r\n    setPageReset\r\n  } = usePagination();\r\n\r\n  //Modal States\r\n  const [modal, setModal] = useState({\r\n    isOpen: false,\r\n    type: '',\r\n    id: ''\r\n  });\r\n\r\n  // Fetch All Todos\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, [getTodos]);\r\n\r\n  // Clientside Todo Search\r\n  useEffect(() => {\r\n    searchTerm && setSearch(searchTerm, todos);\r\n  }, [searchTerm, setSearch, todos]);\r\n\r\n  //Modal Handlers\r\n\r\n  const handleShow = (type, id) => async (e) => {\r\n    e.preventDefault();\r\n    if (type === 'add') {\r\n      setModal({\r\n        isOpen: true,\r\n        type: 'Add'\r\n      });\r\n    }\r\n\r\n    if (type === 'update') {\r\n      await getTodo(id);\r\n      setModal({\r\n        isOpen: true,\r\n        type: 'Update',\r\n        id: id\r\n      });\r\n    }\r\n  };\r\n\r\n  // Icon Handlers\r\n  const handleClick = (e, icon, id) => {\r\n    switch (icon) {\r\n      case 'Check':\r\n        setPageReset(false);\r\n        toggleCompleteTodo(id);\r\n        break;\r\n      case 'Edit':\r\n        setPageReset(false);\r\n        handleShow('update', id)(e);\r\n        break;\r\n      case 'TrashAlt':\r\n        setPageReset(true);\r\n        deleteTodo(id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={modal.isOpen}\r\n        modalClose={() => setModal({ isOpen: false })}\r\n        centered={true}\r\n      >\r\n        {modal.type === 'Add' && <Todo description=\"Add\" setModal={setModal} />}\r\n        {modal.type === 'Update' && <Todo description=\"Update\" setModal={setModal} />}\r\n      </Modal>\r\n      <Button\r\n        text=\"Add POST\"\r\n        onClick={handleShow('add')}\r\n        color=\"white\"\r\n        type=\"submit\"\r\n        className=\"float-right mb-2 todo-button add-todo-button\"\r\n        id=\"user-register-button\"\r\n      />\r\n\r\n      {todos.length === 0 ? (\r\n        <h2 className=\"m-5 lead\">\r\n          {' '}\r\n          You don't have any todo. Click the button to add a posts!{' '}\r\n        </h2>\r\n      ) : (\r\n        <FlexTable\r\n          data={pageOfItems}\r\n          titleData={title}\r\n          iconClick={(e, icon, id) => handleClick(e, icon, id)}\r\n          tableId={'todo-list-flex-table'}\r\n        />\r\n      )}\r\n\r\n      <Pagination\r\n        id={'todo-list-table-pagination'}\r\n        items={isActive ? filtered : todos}\r\n        onChangePage={setPageItems}\r\n        setActivePage={setPage}\r\n        pageSize={pageSize}\r\n        activePage={activePage}\r\n        isSearchActive={isActive}\r\n        paginationClass=\"todo-list-table-pagination d-flex justify-content-center align-items-center\"\r\n        paginationReset={pageReset}\r\n        setPaginationReset={setPageReset}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { useSearch, usePagination } from './../../redux/hooks';\r\n\r\nimport Input from './../../atoms/Input';\r\n\r\nconst Search = () => {\r\n  const { setSearchTerm, searchTerm, isActive } = useSearch();\r\n  const { setPageReset } = usePagination();\r\n  const handleChange = (e) => {\r\n    setPageReset(true);\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      placeholder=\"search by tag\"\r\n      className=\"border-top-0 border-left-0 border-right-0\"\r\n      pClassName=\"ml-4\"\r\n      onChange={handleChange}\r\n      value={isActive ? searchTerm : ''}\r\n      id={'search-todo-tag-input'}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { usePagination } from './../../redux/hooks';\r\n\r\nimport Input from './../../atoms/Input';\r\n\r\nconst PageSize = () => {\r\n  // Search State\r\n  const { setPageSize, pageSize } = usePagination();\r\n\r\n  const handleChange = (e) => {\r\n    setPageSize(Number(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      id=\"pageSize\"\r\n      type=\"text\"\r\n      placeholder=\"search\"\r\n      className=\"border-top-0 border-left-0 border-right-0\"\r\n      onChange={handleChange}\r\n      value={pageSize}\r\n      as=\"select\"\r\n    >\r\n      <option>10</option>\r\n      <option>20</option>\r\n      <option>30</option>\r\n      <option>40</option>\r\n      <option>50</option>\r\n    </Input>\r\n  );\r\n};\r\n\r\nexport default PageSize;\r\n","import React from 'react';\r\nimport TodoList from './TodoList';\r\nimport Search from './Search';\r\n\r\nimport PageSize from './PageSize';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex \">\r\n        <PageSize />\r\n        <Search />\r\n      </div>\r\n      <TodoList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1 className='x-large text-primary'>\r\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\r\n      </h1>\r\n      <p className='large'>Sorry, this page does not exist</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"./../../redux/hooks\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isAuthenticated && !loading ? (\r\n          <Redirect to=\"/login\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Register from '../auth/Register';\r\nimport Login from '../auth/Login';\r\nimport Dashboard from './../dashboard/Dashboard';\r\nimport NotFound from './../NotFound';\r\nimport PrivateRoute from '../routing/PrivateRoute';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <section className=\"container\">\r\n      <Switch>\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: false,\r\n  user: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_TODOS,\r\n  GET_TODOS_SUCCESS,\r\n  GET_TODOS_ERROR,\r\n  GET_TODO,\r\n  GET_TODO_SUCCESS,\r\n  GET_TODO_ERROR,\r\n  ADD_TODO,\r\n  ADD_TODO_SUCCESS,\r\n  ADD_TODO_ERROR,\r\n  DELETE_TODO,\r\n  DELETE_TODO_SUCCESS,\r\n  DELETE_TODO_ERROR,\r\n  UPDATE_TODO,\r\n  UPDATE_TODO_SUCCESS,\r\n  UPDATE_TODO_ERROR,\r\n  TOGGLE_COMPLETE_TODO,\r\n  TOGGLE_COMPLETE_SUCCESS,\r\n  TOGGLE_COMPLETE_ERROR,\r\n  CLEAR_PROFILE\r\n} from './../actions/types';\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  todo: {},\r\n  loading: false,\r\n  error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_TODOS:\r\n    case GET_TODO:\r\n    case ADD_TODO:\r\n    case DELETE_TODO:\r\n    case UPDATE_TODO:\r\n    case TOGGLE_COMPLETE_TODO:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ADD_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: [payload, ...state.todos],\r\n        loading: false\r\n      };\r\n    case GET_TODOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: payload,\r\n        loading: false\r\n      };\r\n    case GET_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todo: payload,\r\n        loading: false\r\n      };\r\n    case GET_TODOS_ERROR:\r\n    case GET_TODO_ERROR:\r\n    case ADD_TODO_ERROR:\r\n    case DELETE_TODO_ERROR:\r\n    case UPDATE_TODO_ERROR:\r\n    case TOGGLE_COMPLETE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case DELETE_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo._id !== payload),\r\n        loading: false\r\n      };\r\n    case UPDATE_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) =>\r\n          todo._id === payload._id ? { ...payload } : todo\r\n        ),\r\n        loading: false\r\n      };\r\n    case TOGGLE_COMPLETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) =>\r\n          todo._id === payload._id ? { ...todo, completed: payload.status } : todo\r\n        ),\r\n        loading: false\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        todos: [],\r\n        todo: {},\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_TAGS,\r\n  GET_TAGS_SUCCESS,\r\n  GET_TAGS_ERROR,\r\n  CLEAR_PROFILE\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  tags: [],\r\n  loading: false,\r\n  error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_TAGS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_TAGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tags: payload,\r\n        loading: false\r\n      };\r\n    case GET_TAGS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        tags: [],\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_SEARCH_TERM,\r\n  LOCATION_CHANGED,\r\n  SET_SEARCH,\r\n  CLEAR_PROFILE\r\n} from './../actions/types';\r\n\r\nconst initialState = {\r\n  isActive: null,\r\n  searchTerm: '',\r\n  filtered: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        filtered: payload.filtered\r\n      };\r\n    case SET_SEARCH_TERM:\r\n      return {\r\n        ...state,\r\n        isActive: payload.term ? true : null,\r\n        searchTerm: payload.term,\r\n        filtered: payload.term ? state.filtered : []\r\n      };\r\n    case LOCATION_CHANGED:\r\n      return initialState;\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        isActive: null,\r\n        searchTerm: '',\r\n        filtered: []\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_PAGINATION_PAGE,\r\n  SET_PAGINATION_ITEMS,\r\n  SET_PAGINATION_SIZE,\r\n  SET_PAGINATION_RESET,\r\n  CLEAR_PROFILE\r\n} from './../actions/types';\r\n\r\nconst initialState = {\r\n  activePage: null,\r\n  pageSize: 10,\r\n  pageOfItems: [],\r\n  pageReset: true\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_PAGINATION_PAGE:\r\n      return {\r\n        ...state,\r\n        activePage: payload\r\n      };\r\n    case SET_PAGINATION_ITEMS:\r\n      return {\r\n        ...state,\r\n        pageOfItems: payload\r\n      };\r\n\r\n    case SET_PAGINATION_SIZE:\r\n      return {\r\n        ...state,\r\n        pageSize: payload\r\n      };\r\n    case SET_PAGINATION_RESET:\r\n      return {\r\n        ...state,\r\n        pageReset: payload\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        activePage: null,\r\n        pageSize: 10,\r\n        pageOfItems: [],\r\n        pageReset: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport todo from './todo';\r\nimport tag from './tag';\r\nimport search from './search';\r\nimport pagination from './pagination';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  todo,\r\n  tag,\r\n  search,\r\n  pagination\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n//Components\r\nimport Homepage from './pages/Homepage';\r\nimport Navbar from './pages/layout/Navbar';\r\nimport LatestNews from './pages/layout/LatestNews';\r\n\r\nimport Routes from './pages/routing/Routes';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { loadUser } from './redux/actions/auth';\r\n\r\nimport setAuthToken from './helpers/setAuthToken';\r\nimport './App.css';\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <>\r\n          <Navbar/>\r\n          {/* <LatestNews/> */}\r\n          <ToastContainer newestOnTop autoClose={2000} />\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Homepage} />\r\n            <Route component={Routes} />\r\n          </Switch>\r\n        </>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}